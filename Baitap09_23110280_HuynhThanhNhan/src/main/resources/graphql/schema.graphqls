type Query {
    allProducts: [Product]
    productsByPriceAsc: [Product]
    productsByCategory(categoryId: ID!): [Product]
    productsByCategoryOrderByPrice(categoryId: ID!): [Product]
    productById(id: ID!): Product
    allCategories: [Category]
    categoryById(id: ID!): Category
    categoriesByUser(userId: ID!): [Category]
    allUsers: [User]
    userById(id: ID!): User
    usersByCategory(categoryId: ID!): [User]
}

type Mutation {
    createProduct(input: ProductInput!): Product
    updateProduct(id: ID!, input: ProductInput!): Product
    deleteProduct(id: ID!): Boolean
    createCategory(input: CategoryInput!): Category
    updateCategory(id: ID!, input: CategoryInput!): Category
    deleteCategory(id: ID!): Boolean
    createUser(input: UserInput!): User
    updateUser(id: ID!, input: UserInput!): User
    deleteUser(id: ID!): Boolean
}

type Product {
    id: ID!
    title: String!
    quantity: Int!
    description: String
    price: Float!
    user: User
    category: Category
}

type Category {
    id: ID!
    name: String!
    images: String
    products: [Product]
    users: [User]
}

type User {
    id: ID!
    fullname: String!
    email: String!
    password: String!
    phone: String
    products: [Product]
    categories: [Category]
}

input ProductInput {
    title: String!
    quantity: Int!
    description: String
    price: Float!
    userId: ID
    categoryId: ID
}

input CategoryInput {
    name: String!
    images: String
}

input UserInput {
    fullname: String!
    email: String!
    password: String!
    phone: String
}
